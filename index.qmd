---
title: "Exploring Artificial Intelligence and Programming: A Comprehensive Analysis of Developer Perspectives"
author: "Clara Hoey, Daizy Buluma, Christian Manzi"
date: "12 Dec. 2023"
format:
  html:
    theme: cosmo
    toc: true
---

```{r}
#| label: setup
#| include: false

# Set code chunk defaults 
# Consider adding `message = FALSE` option
knitr::opts_chunk$set(echo = FALSE) 
                      
# Set R environment options
options(knitr.kable.NA = '')

# Load packages
library(tidyverse)
library(readr)
library(tidytext)
library(textdata)
library(wordcloud)
```

# Introduction

In the world of coding, things are shaking up with the rise of artificial intelligence (AI) tools. From people just getting the hang of coding to the pros handling big projects, everyone has a different perspective on AI. In this blog project, we’re digging into the real thoughts of thousands of programmers across the United States at different career stages. Our goal is to use sentiment analysis to better understand the attitudes of programmers towards the use of AI tools in Stack Overflow. With the continuing rise of AI usage in the programming industry, it is important to understand how professional programmers feel about the impact of AI on their work.

```{r}
#| fig.cap: 'Man vs AI'
#| out.width: 80%
#| fig.align: center

knitr::include_graphics("img/AI.png")
```

All of the programmers in our study are software developers who use Stack Overflow (an online platform for sharing knowledge about computer programming) for their work at least once a week. The data is in the form of survey responses. The survey includes a mix of multiple choice and open response questions in 7 categories: (1) Basic Information; (2) Education, Work, and Career; (3) Technology and Tech Culture; (4) Stack Overflow Usage + Community; (5) Artificial Intelligence; (6) Professional Developer Series (Optional); and (7) Final Questions. In this blog, we have included data from some demographic multiple choice questions (e.g. age, years of coding experience) and have also done text analysis on the open response question “What is your opinion on Stack Overflow using AI tools to improve the current experience? What could AI help with most to improve Stack Overflow?”. 

This data is from the American Statistical Association’s Fall 2023 Data Challenge. The description of the dataset and downloadable zip file containing all of the data used in this project can be found at this link: <https://community.amstat.org/asafalldatachallenge/home>. 
					


<!-- ## Website publication work flow -->

<!-- 1. Edit qmd -->

<!-- 2. Knit to HTML to view progress. You may need to click "Open in Browser" for some content to show (sometimes content won't show until you actually push your changes to GitHub and view the published website). -->

<!-- 3. Commit and push changes when you are ready. The website may take a couple minutes to update automatically after the push, but you may need to clear your browser's cache or view the page in a private/incognito window to see the changes more quickly.  -->


# Research Findings
## Overall Developer Sentiments

Upon analyzing the survey responses from our cohort of active Stack Overflow users, several noteworthy trends and sentiments emerged. Firstly, a majority of participants expressed a generally positive attitude towards the integration of AI tools on Stack Overflow, citing potential benefits in streamlining problem-solving processes and enhancing the overall user experience. Respondents highlighted the prospect of improved search functionality, more accurate question categorization, and tailored content recommendations as areas where AI could significantly contribute.

<!-- You can include text, `code`, and output as usual. Remember to take full advantage of Markdown and its [syntax shortcuts](https://www.markdownguide.org/basic-syntax/). -->
```{r,message=FALSE}
#| label: data-wrangling
#| fig.align: left
#| out.width: 100%

#################
# TEXT ANALYSIS #
#################

soai_res <- read_rds("data/ID_SOAI_responses.rds")


soai_data <- soai_res |>
  unnest_tokens(output = word, input = SOAI) |>
  filter(!is.na(word))

non_stop_words <- c("necessary", "don't", "awfully", "appropriate", "wouldn't") # add more

more_stop_words <- c("stack", "overflow", "ai", "stackoverflow", "questions", "answers", "users")

# filter stop_words to keep some words

filtered_stop_words <- stop_words |>
  filter(!word %in% non_stop_words)

# words in soai_data before filtering for stop_words
#count(soai_data) # 849,989

soai_no_stopwords <- soai_data |>
  anti_join(filtered_stop_words, by = "word") |>
  filter(! word %in% more_stop_words)

#count(soai_no_stopwords) # 345,877

removed_words <- soai_data |>
  anti_join(soai_no_stopwords, by = "word") |>
  count(word) |>
  arrange(word)

#removed_words # 659 words
```

```{r}
#| label: ggplot-3
#| fig.align: left
#| out.width: 100%

# PLOT OVERALL RESPONSES SENTIMENT SCORE  

afinn_lexicon <- get_sentiments("afinn")

soai_data_gram <- soai_res |>
 unnest_tokens(output = word, input= SOAI, token="words") %>%
  filter(!is.na(word))

soai_no_stopwords_gram <- soai_data_gram |>
  anti_join(filtered_stop_words, by = "word") |>
  filter(! word %in% more_stop_words)

removed_words <- soai_data_gram |>
  anti_join(soai_no_stopwords_gram, by = "word") |>
  count(word) |>
  arrange(word)

# using afinn lexicon
soai_afinn <- soai_no_stopwords_gram |>
  inner_join(afinn_lexicon, by = "word") |>
  group_by(ResponseId) |>
  summarize(total_score_per_response = sum(value))

# PLOT OVERALL RESPONSES SENTIMENT SCORE BASED ON AFINN LEXICON

ggplot(data = soai_afinn, aes(x = total_score_per_response)) +
  geom_density(color="#AF7AC5", fill="#AF7AC5", alpha = 0.5) +
  theme_classic() +
  labs(title = "Total Response Score based on AFINN Lexicon", x = "Response Score")
```
Examining the density plot, it is evident that a majority of responses lean towards the positive side, indicating an overall optimistic sentiment among the surveyed developers. However, recognizing that opinions extend beyond a simple positive-negative spectrum, we sought a more specific understanding of respondents' feelings. To look deeper into the emotional landscape, we used a bar chart to visualize the diverse sentiments expressed by developers.


```{r,warning=FALSE}
#| label: ggplot-4
#| fig.align: left
#| out.width: 100%

# PLOT OVERALL RESPONSES SENTIMENT SCORE BASED ON NRC LEXICON

nrc_lexicon <- get_sentiments("nrc")

soai_nrc <- soai_no_stopwords_gram |>
  inner_join(nrc_lexicon, by = "word") |>
  group_by(ResponseId) |>
  group_by(sentiment)

soai_nrc_ds <- soai_nrc |>
  group_by(sentiment) |>
  summarize(N = n())

# BAR CHART
ggplot(data = soai_nrc_ds, aes(x = sentiment, y = N)) +
  geom_col(aes(fill = sentiment)) +
  theme(axis.text.x = element_text(angle = 45)) +
  labs(title = "Visualizing Overall Sentiment based on NRC Lexicon", x = "Sentiments", y = "Word Count") +
  guides(fill = "none")
```



This emotional analysis categorizes responses based on various emotions, such as anticipation, surprise, and trust, offering a more comprehensive perspective beyond positivity or negativity. For instance, the prevalence of trust in the chart implies a widespread optimistic outlook among the participants. Conversely, the substantial frequency of fear, as observed in responses from over 5,000 participants, signals notable concerns or reservations regarding the integration of AI tools on Stack Overflow. This emotional analysis adds more depth to our understanding of the sentiments expressed by programmers, offering a more holistic view of their attitudes toward AI.

## Analysis of Text Responses
```{r}
#| label: ggplot-1
#| fig.align: left
#| out.width: 100%
# PLOT FREQUENT WORDS

soai_no_stopwords |>
    count(word, sort = TRUE) |>
    slice(1:20) |>
    # fct_reorder is used to re-order the axis (displaying the word)
    # by values of n (the number of times that word was used)
    ggplot(aes(x = fct_reorder(word, n), y = n, color = word, fill = word)) +
    geom_col() +
    # Rotate graph
    coord_flip() +
    guides(color = "none",
           fill = "none") +
    labs(
      # Remove x variable label; notice that although coordinates are flipped,
      # the labels correspond to which variables were specified
      # as `x` and `y` in `aes()`
      x = NULL,
      y = "Number of instances",
      title = "The most common words in developers responses on AI")

soai_word_freqs <- soai_no_stopwords |>
  select(word) |>
  count(word)
```



```{r}
#| label: ggplot-2
#| fig.align: left
#| out.width: 100%

soai_data <- soai_res |>
 unnest_tokens(output = word, input= SOAI, token="ngrams", n=3) %>%
  filter(!is.na(word))

non_stop_words <- c("necessary", "don't", "awfully", "appropriate", "wouldn't")

more_stop_words <- c("stack", "overflow", "ai", "stackoverflow", "questions", "answers", "users","it could","would","would be")

# filter stop_words to keep some words

filtered_stop_words <- stop_words |>
  filter(!word %in% non_stop_words)

soai_no_stopwords <- soai_data |>
  anti_join(filtered_stop_words, by = "word") |>
  filter(! word %in% more_stop_words)


soai_no_stopwords |>
    count(word, sort = TRUE) |>
    slice(1:25) |>
    # fct_reorder is used to re-order the axis (displaying the word)
    # by values of n (the number of times that word was used)
    ggplot(aes(x = fct_reorder(word, n), y = n, color = word, fill = word)) +
    geom_col() +
    # Rotate graph
    coord_flip() +
    guides(color = "none",
           fill = "none") +
    labs(
      # Remove x variable label; notice that although coordinates are flipped,
      # the labels correspond to which variables were specified
      # as `x` and `y` in `aes()`
      x = NULL,
      y = "Number of instances",
      title = "The most common trigrams in developers responses on AI")

```


## Sentiments based on various categories


In addition, we used a Shiny app to facilitate further exploration of the data. This application breaks down response scores by key demographic factors, providing a comprehensive look at how opinions regarding AI integration on Stack Overflow vary across different segments of the programming community. Through the Shiny app, users can interactively analyze response scores based on factors such as experience, age, and education. 

```{r}
#| label: ds-salaries-app
#| out.width: "100%"

  knitr::include_app("https://manzic.shinyapps.io/NMSHINY/",
                    height = "500px")

```
Analyzing the findings from the Shiny app, which breaks down response scores by demographic factors, several noteworthy patterns emerged. Examining sentiments based on experience levels, it became apparent that less experienced programmers tended to express more positive opinions about AI. This suggests a potential correlation between lower levels of coding experience and a more favorable outlook towards the integration of AI tools on Stack Overflow. In terms of age groups, the median opinion scores were consistent across most groups, except for respondents aged 65 and above, who exhibited a slightly lower median sentiment. Notably, the age groups of 18-24 and 25-34 displayed the highest upper range in opinions, though this could be influenced by a higher number of respondents within these age brackets. Conversely, the 35-44 and 45-54 age groups showed lower sentiment ranges. When examining sentiments by education, no substantial differences were observed, with most outliers occurring among respondents holding a Bachelor's degree. These nuanced insights gleaned from the Shiny app shed light on the intersectionality of demographic factors and their impact on programmers' sentiments regarding AI integration on Stack Overflow.

<!-- <iframe src = "https://manzic.shinyapps.io/NMSHINY/" height="500" width="1000" > </iframe> -->



<!-- ![This is another figure caption](https://media.giphy.com/media/8i5IvxP9ZLgmjXN1BF/giphy.gif) -->

# Conclusion

Our conclusion and recommendations maybe?


# Limitations and Improvements

While our study has provided valuable insights into programmers' attitudes towards AI on Stack Overflow, it is important to acknowledge certain limitations that could impact the accuracy of our findings. Sentiment analysis, while a powerful tool, is not without its flaws. The complex nature of human language, sarcasm, or context-specific interpretations can challenge the accuracy of sentiment categorization. Additionally, the filtration of words and the strength assigned to them can influence the analysis outcome, potentially introducing bias. Furthermore, the uneven distribution of ages and experience levels in our dataset might skew our results towards certain demographic groups. 

To address these limitations, future research endeavors could focus on analyzing a larger set of open-response answers, providing a more precise understanding of programmer sentiments. Experimenting with various lexicons and refining the sentiment analysis methodology could also enhance the accuracy of our findings. Moreover, diversifying the survey audience beyond Stack Overflow users to include programmers from specific companies or industries could offer a more comprehensive and representative view of attitudes towards AI tools in coding. We may obtain a more comprehensive and precise representation of the perspectives of the programming community by implementing these enhancements.

# References


Baumer, B. S., Kaplan, D. T., and Horton, N. J. (2021), *Modern Data Science with R* (2nd ed.), Boca Raton, FL: CRC Press.

Silge J, Robinson D (2016). “tidytext: Text Mining and Analysis Using Tidy Data Principles in R.” _JOSS_,
  *1*(3). doi:10.21105/joss.00037 <https://doi.org/10.21105/joss.00037>,
  <http://dx.doi.org/10.21105/joss.00037>.
  

Hvitfeldt E (2022). _textdata: Download and Load Various Text Datasets_. R package version 0.4.4,
  <https://CRAN.R-project.org/package=textdata>.
  
Shah, Syed A. A. (October 2022), "Starbucks Drinks" (Version 1), *Kaggle*, available at <https://www.kaggle.com/datasets/syedasimalishah/starbucks-drinks>.


Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J,
  Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K,
  Vaughan D, Wilke C, Woo K, Yutani H (2019). “Welcome to the tidyverse.” _Journal of Open Source Software_,
  *4*(43), 1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.
  
Wickham H, Hester J, Bryan J (2023). _readr: Read Rectangular Text Data_. R package version 2.1.4,
  <https://CRAN.R-project.org/package=readr>.
  



 

 


